
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALIAS AND ARRAY AT BEGIN BITWISE_AND BITWISE_NOT BITWISE_OR BITWISE_XOR BREAK CASE CLASS COLON COMMA COMPLEX CONSTANT DEDENT DEF DEFINED DIVIDE DO DOT EACH ELSE ELSEIF END_LOWER END_UPPER ENSURE EQUAL EQUALS EXPONENT FALSE FILE FLOAT FOR GLOBAL GREATER_THAN GREATER_THAN_EQUAL HASH HASHAS ID IF IN INDENT INT LBRACKET LCURLYBRACKET LESS_THAN LESS_THAN_EQUAL LINE LOOP LPARENTHESIS MINUS MODULE MODULO MULTIPLY NEXT NIL NOT NOT_EQUAL OP_AND OP_NOT OP_OR OR PLUS PUTS RATIONAL RBRACKET RCURLYBRACKET REDO RESCUE RETRY RETURN RPARENTHESIS SELF SEMICOLON SHIFT_LEFT SHIFT_RIGHT STR SUPER SYMBOL THEN TRUE UNDEF UNLESS UNTIL WHEN WHILE YIELD\n    statement : set_vacio\n    | set_numero\n    | set_str\n    \n    statement : array_vacio\n    | array_numero\n    | array_str\n    \n    array_vacio : ID EQUALS LBRACKET RBRACKET\n    \n    array_numero : ID EQUALS LBRACKET varios_numeros RBRACKET\n    \n    array_str : ID EQUALS LBRACKET varios_str RBRACKET\n    \n    set_vacio : ID EQUALS LCURLYBRACKET RCURLYBRACKET\n    \n    set_numero : ID EQUALS LCURLYBRACKET varios_numeros RCURLYBRACKET\n    \n    set_str : ID EQUALS LCURLYBRACKET varios_str RCURLYBRACKET\n    \n    statement : hash_vacio\n    | hash_elementos\n    \n    hash_vacio : ID EQUALS LCURLYBRACKET RCURLYBRACKET\n    \n    hash_elementos : ID EQUALS LCURLYBRACKET varios_pares_hash RCURLYBRACKET\n    \n    varios_pares_hash : ID COLON valor\n    | STR HASHAS valor\n    | ID COLON valor COMMA varios_pares_hash\n    | STR HASHAS valor COMMA varios_pares_hash\n    \n    statement : IF comparaciones statement END_LOWER\n    \n    statement : LOOP DO statement BREAK IF comparacion\n    \n    statement : CASE valor when_clauses ELSE statement_list END_LOWER\n    | CASE valor when_clauses ELSE PUTS valor END_LOWER\n    \n    when_clauses : when_clause\n    | when_clauses when_clause\n    \n   when_clause : WHEN valor THEN statement_list\n   | WHEN valor PUTS valor\n    \n    statement : DEF ID LPARENTHESIS RPARENTHESIS statement END_LOWER\n    \n    statement : DEF ID LPARENTHESIS argumentos RPARENTHESIS statement END_LOWER\n    \n    statement : DEF ID LPARENTHESIS argumentos RPARENTHESIS statement RETURN valor END_LOWER\n    \n    statement : PUTS valor\n    \n    varios_str : STR\n    | STR COMMA STR\n    \n    statement : ID EQUALS valor\n    \n    valor : numero\n    | STR\n    | ID\n    \n    argumentos : ID\n    | ID COMMA argumentos\n    \n    statement_list : statement_list statement\n    | statement\n    \n    comparador : EQUAL\n    | NOT_EQUAL\n    | GREATER_THAN\n    | LESS_THAN\n    | GREATER_THAN_EQUAL\n    | LESS_THAN_EQUAL\n    \n    comparacion_num : numero comparador numero\n    \n    comparacion_variables : ID EQUAL ID\n    | ID NOT_EQUAL ID\n    | boolean\n    \n    comparacion : comparacion_num\n    | comparacion_variables\n    \n    comparaciones : comparacion\n    | comparacion conector comparacion\n    conector : OP_AND\n  | OP_OR\n  \n    numero : INT\n    | FLOAT\n    \n    varios_numeros : numero\n    | numero COMMA varios_numeros\n    \n    statement : ID EQUALS expresion\n    \n    operador_aritmetico : PLUS\n    | MINUS\n    | MULTIPLY\n    | DIVIDE\n    | MODULO\n    | EXPONENT\n    \n    expresion : numero operador_aritmetico numero\n    | ID operador_aritmetico numero\n    | ID operador_aritmetico ID\n    | numero operador_aritmetico ID\n    \n    boolean : TRUE\n    | FALSE\n    '
    
_lr_action_items = {'IF':([0,2,3,4,5,6,7,8,9,16,17,18,19,22,23,24,25,26,27,29,30,31,32,53,54,55,58,59,60,61,62,63,64,65,69,79,85,91,93,94,98,99,100,102,103,104,108,109,110,111,112,113,114,115,116,119,125,126,134,],[10,-1,-2,-3,-4,-5,-6,-13,-14,10,-55,-53,-54,-52,-59,-60,-74,-75,10,-36,-37,-38,-32,-38,-35,-63,-36,-21,-56,-49,-50,-51,90,10,10,-10,-7,10,-42,10,10,-72,-71,-11,-12,-16,-8,-9,-70,-73,-22,-23,-41,-32,10,-29,-24,-30,-31,]),'LOOP':([0,2,3,4,5,6,7,8,9,16,17,18,19,22,23,24,25,26,27,29,30,31,32,53,54,55,58,59,60,61,62,63,65,69,79,85,91,93,94,98,99,100,102,103,104,108,109,110,111,112,113,114,115,116,119,125,126,134,],[11,-1,-2,-3,-4,-5,-6,-13,-14,11,-55,-53,-54,-52,-59,-60,-74,-75,11,-36,-37,-38,-32,-38,-35,-63,-36,-21,-56,-49,-50,-51,11,11,-10,-7,11,-42,11,11,-72,-71,-11,-12,-16,-8,-9,-70,-73,-22,-23,-41,-32,11,-29,-24,-30,-31,]),'CASE':([0,2,3,4,5,6,7,8,9,16,17,18,19,22,23,24,25,26,27,29,30,31,32,53,54,55,58,59,60,61,62,63,65,69,79,85,91,93,94,98,99,100,102,103,104,108,109,110,111,112,113,114,115,116,119,125,126,134,],[12,-1,-2,-3,-4,-5,-6,-13,-14,12,-55,-53,-54,-52,-59,-60,-74,-75,12,-36,-37,-38,-32,-38,-35,-63,-36,-21,-56,-49,-50,-51,12,12,-10,-7,12,-42,12,12,-72,-71,-11,-12,-16,-8,-9,-70,-73,-22,-23,-41,-32,12,-29,-24,-30,-31,]),'DEF':([0,2,3,4,5,6,7,8,9,16,17,18,19,22,23,24,25,26,27,29,30,31,32,53,54,55,58,59,60,61,62,63,65,69,79,85,91,93,94,98,99,100,102,103,104,108,109,110,111,112,113,114,115,116,119,125,126,134,],[14,-1,-2,-3,-4,-5,-6,-13,-14,14,-55,-53,-54,-52,-59,-60,-74,-75,14,-36,-37,-38,-32,-38,-35,-63,-36,-21,-56,-49,-50,-51,14,14,-10,-7,14,-42,14,14,-72,-71,-11,-12,-16,-8,-9,-70,-73,-22,-23,-41,-32,14,-29,-24,-30,-31,]),'PUTS':([0,2,3,4,5,6,7,8,9,16,17,18,19,22,23,24,25,26,27,29,30,31,32,53,54,55,58,59,60,61,62,63,65,67,69,79,85,91,93,94,98,99,100,102,103,104,108,109,110,111,112,113,114,115,116,119,125,126,134,],[13,-1,-2,-3,-4,-5,-6,-13,-14,13,-55,-53,-54,-52,-59,-60,-74,-75,13,-36,-37,-38,-32,-38,-35,-63,-36,-21,-56,-49,-50,-51,92,95,13,-10,-7,13,-42,13,13,-72,-71,-11,-12,-16,-8,-9,-70,-73,-22,-23,-41,-32,13,-29,-24,-30,-31,]),'ID':([0,2,3,4,5,6,7,8,9,10,12,13,14,16,17,18,19,22,23,24,25,26,27,29,30,31,32,34,36,37,38,46,47,51,52,53,54,55,56,58,59,60,61,62,63,65,69,71,72,73,74,75,76,77,79,85,89,90,91,92,93,94,95,96,98,99,100,101,102,103,104,107,108,109,110,111,112,113,114,115,116,119,125,126,127,128,129,134,],[15,-1,-2,-3,-4,-5,-6,-13,-14,21,31,31,33,15,-55,-53,-54,-52,-59,-60,-74,-75,15,-36,-37,-38,-32,53,21,-57,-58,62,63,31,68,-38,-35,-63,78,-36,-21,-56,-49,-50,-51,15,15,99,-64,-65,-66,-67,-68,-69,-10,-7,111,21,15,31,-42,15,31,68,15,-72,-71,31,-11,-12,-16,31,-8,-9,-70,-73,-22,-23,-41,-32,15,-29,-24,-30,31,78,78,-31,]),'$end':([1,2,3,4,5,6,7,8,9,18,19,22,23,24,25,26,29,30,31,32,53,54,55,58,59,61,62,63,79,85,99,100,102,103,104,108,109,110,111,112,113,119,125,126,134,],[0,-1,-2,-3,-4,-5,-6,-13,-14,-53,-54,-52,-59,-60,-74,-75,-36,-37,-38,-32,-38,-35,-63,-36,-21,-49,-50,-51,-10,-7,-72,-71,-11,-12,-16,-8,-9,-70,-73,-22,-23,-29,-24,-30,-31,]),'END_LOWER':([2,3,4,5,6,7,8,9,18,19,22,23,24,25,26,29,30,31,32,35,53,54,55,58,59,61,62,63,79,85,91,93,97,99,100,102,103,104,108,109,110,111,112,113,114,115,119,120,125,126,130,134,],[-1,-2,-3,-4,-5,-6,-13,-14,-53,-54,-52,-59,-60,-74,-75,-36,-37,-38,-32,59,-38,-35,-63,-36,-21,-49,-50,-51,-10,-7,113,-42,119,-72,-71,-11,-12,-16,-8,-9,-70,-73,-22,-23,-41,125,-29,126,-24,-30,134,-31,]),'BREAK':([2,3,4,5,6,7,8,9,18,19,22,23,24,25,26,29,30,31,32,48,53,54,55,58,59,61,62,63,79,85,99,100,102,103,104,108,109,110,111,112,113,119,125,126,134,],[-1,-2,-3,-4,-5,-6,-13,-14,-53,-54,-52,-59,-60,-74,-75,-36,-37,-38,-32,64,-38,-35,-63,-36,-21,-49,-50,-51,-10,-7,-72,-71,-11,-12,-16,-8,-9,-70,-73,-22,-23,-29,-24,-30,-31,]),'ELSE':([2,3,4,5,6,7,8,9,18,19,22,23,24,25,26,29,30,31,32,49,50,53,54,55,58,59,61,62,63,66,79,85,93,99,100,102,103,104,108,109,110,111,112,113,114,116,117,119,125,126,134,],[-1,-2,-3,-4,-5,-6,-13,-14,-53,-54,-52,-59,-60,-74,-75,-36,-37,-38,-32,65,-25,-38,-35,-63,-36,-21,-49,-50,-51,-26,-10,-7,-42,-72,-71,-11,-12,-16,-8,-9,-70,-73,-22,-23,-41,-27,-28,-29,-24,-30,-31,]),'WHEN':([2,3,4,5,6,7,8,9,18,19,22,23,24,25,26,28,29,30,31,32,49,50,53,54,55,58,59,61,62,63,66,79,85,93,99,100,102,103,104,108,109,110,111,112,113,114,116,117,119,125,126,134,],[-1,-2,-3,-4,-5,-6,-13,-14,-53,-54,-52,-59,-60,-74,-75,51,-36,-37,-38,-32,51,-25,-38,-35,-63,-36,-21,-49,-50,-51,-26,-10,-7,-42,-72,-71,-11,-12,-16,-8,-9,-70,-73,-22,-23,-41,-27,-28,-29,-24,-30,-31,]),'RETURN':([2,3,4,5,6,7,8,9,18,19,22,23,24,25,26,29,30,31,32,53,54,55,58,59,61,62,63,79,85,99,100,102,103,104,108,109,110,111,112,113,119,120,125,126,134,],[-1,-2,-3,-4,-5,-6,-13,-14,-53,-54,-52,-59,-60,-74,-75,-36,-37,-38,-32,-38,-35,-63,-36,-21,-49,-50,-51,-10,-7,-72,-71,-11,-12,-16,-8,-9,-70,-73,-22,-23,-29,127,-24,-30,-31,]),'INT':([10,12,13,34,36,37,38,39,40,41,42,43,44,45,51,56,57,71,72,73,74,75,76,77,89,90,92,95,101,105,107,127,],[23,23,23,23,23,-57,-58,23,-43,-44,-45,-46,-47,-48,23,23,23,23,-64,-65,-66,-67,-68,-69,23,23,23,23,23,23,23,23,]),'FLOAT':([10,12,13,34,36,37,38,39,40,41,42,43,44,45,51,56,57,71,72,73,74,75,76,77,89,90,92,95,101,105,107,127,],[24,24,24,24,24,-57,-58,24,-43,-44,-45,-46,-47,-48,24,24,24,24,-64,-65,-66,-67,-68,-69,24,24,24,24,24,24,24,24,]),'TRUE':([10,36,37,38,90,],[25,25,-57,-58,25,]),'FALSE':([10,36,37,38,90,],[26,26,-57,-58,26,]),'DO':([11,],[27,]),'STR':([12,13,34,51,56,57,92,95,101,106,107,127,128,129,],[30,30,30,30,84,88,30,30,30,123,30,30,132,132,]),'EQUALS':([15,],[34,]),'OP_AND':([17,18,19,22,23,24,25,26,61,62,63,],[37,-53,-54,-52,-59,-60,-74,-75,-49,-50,-51,]),'OP_OR':([17,18,19,22,23,24,25,26,61,62,63,],[38,-53,-54,-52,-59,-60,-74,-75,-49,-50,-51,]),'EQUAL':([20,21,23,24,],[40,46,-59,-60,]),'NOT_EQUAL':([20,21,23,24,],[41,47,-59,-60,]),'GREATER_THAN':([20,23,24,],[42,-59,-60,]),'LESS_THAN':([20,23,24,],[43,-59,-60,]),'GREATER_THAN_EQUAL':([20,23,24,],[44,-59,-60,]),'LESS_THAN_EQUAL':([20,23,24,],[45,-59,-60,]),'PLUS':([23,24,53,58,],[-59,-60,72,72,]),'MINUS':([23,24,53,58,],[-59,-60,73,73,]),'MULTIPLY':([23,24,53,58,],[-59,-60,74,74,]),'DIVIDE':([23,24,53,58,],[-59,-60,75,75,]),'MODULO':([23,24,53,58,],[-59,-60,76,76,]),'EXPONENT':([23,24,53,58,],[-59,-60,77,77,]),'THEN':([23,24,29,30,31,67,],[-59,-60,-36,-37,-38,94,]),'COMMA':([23,24,29,30,31,68,83,84,88,121,124,],[-59,-60,-36,-37,-38,96,105,106,106,128,129,]),'RCURLYBRACKET':([23,24,29,30,31,56,80,81,82,83,84,121,122,123,124,131,133,],[-59,-60,-36,-37,-38,79,102,103,104,-61,-33,-17,-62,-34,-18,-19,-20,]),'RBRACKET':([23,24,57,83,86,87,88,122,123,],[-59,-60,85,-61,108,109,-33,-62,-34,]),'LPARENTHESIS':([33,],[52,]),'LCURLYBRACKET':([34,],[56,]),'LBRACKET':([34,],[57,]),'RPARENTHESIS':([52,68,70,118,],[69,-39,98,-40,]),'COLON':([78,],[101,]),'HASHAS':([84,132,],[107,107,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,16,27,65,69,91,94,98,116,],[1,35,48,93,97,114,93,120,114,]),'set_vacio':([0,16,27,65,69,91,94,98,116,],[2,2,2,2,2,2,2,2,2,]),'set_numero':([0,16,27,65,69,91,94,98,116,],[3,3,3,3,3,3,3,3,3,]),'set_str':([0,16,27,65,69,91,94,98,116,],[4,4,4,4,4,4,4,4,4,]),'array_vacio':([0,16,27,65,69,91,94,98,116,],[5,5,5,5,5,5,5,5,5,]),'array_numero':([0,16,27,65,69,91,94,98,116,],[6,6,6,6,6,6,6,6,6,]),'array_str':([0,16,27,65,69,91,94,98,116,],[7,7,7,7,7,7,7,7,7,]),'hash_vacio':([0,16,27,65,69,91,94,98,116,],[8,8,8,8,8,8,8,8,8,]),'hash_elementos':([0,16,27,65,69,91,94,98,116,],[9,9,9,9,9,9,9,9,9,]),'comparaciones':([10,],[16,]),'comparacion':([10,36,90,],[17,60,112,]),'comparacion_num':([10,36,90,],[18,18,18,]),'comparacion_variables':([10,36,90,],[19,19,19,]),'numero':([10,12,13,34,36,39,51,56,57,71,89,90,92,95,101,105,107,127,],[20,29,29,58,20,61,29,83,83,100,110,20,29,29,29,83,29,29,]),'boolean':([10,36,90,],[22,22,22,]),'valor':([12,13,34,51,92,95,101,107,127,],[28,32,54,67,115,117,121,124,130,]),'conector':([17,],[36,]),'comparador':([20,],[39,]),'when_clauses':([28,],[49,]),'when_clause':([28,49,],[50,66,]),'expresion':([34,],[55,]),'argumentos':([52,96,],[70,118,]),'operador_aritmetico':([53,58,],[71,89,]),'varios_numeros':([56,57,105,],[80,86,122,]),'varios_str':([56,57,],[81,87,]),'varios_pares_hash':([56,128,129,],[82,131,133,]),'statement_list':([65,94,],[91,116,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> set_vacio','statement',1,'p_sets','sintaxis.py',6),
  ('statement -> set_numero','statement',1,'p_sets','sintaxis.py',7),
  ('statement -> set_str','statement',1,'p_sets','sintaxis.py',8),
  ('statement -> array_vacio','statement',1,'p_array','sintaxis.py',16),
  ('statement -> array_numero','statement',1,'p_array','sintaxis.py',17),
  ('statement -> array_str','statement',1,'p_array','sintaxis.py',18),
  ('array_vacio -> ID EQUALS LBRACKET RBRACKET','array_vacio',4,'p_array_vacio','sintaxis.py',23),
  ('array_numero -> ID EQUALS LBRACKET varios_numeros RBRACKET','array_numero',5,'p_array_numeros','sintaxis.py',28),
  ('array_str -> ID EQUALS LBRACKET varios_str RBRACKET','array_str',5,'p_array_str','sintaxis.py',33),
  ('set_vacio -> ID EQUALS LCURLYBRACKET RCURLYBRACKET','set_vacio',4,'p_set_vacio','sintaxis.py',40),
  ('set_numero -> ID EQUALS LCURLYBRACKET varios_numeros RCURLYBRACKET','set_numero',5,'p_set_numeros','sintaxis.py',44),
  ('set_str -> ID EQUALS LCURLYBRACKET varios_str RCURLYBRACKET','set_str',5,'p_set_str','sintaxis.py',49),
  ('statement -> hash_vacio','statement',1,'p_hash','sintaxis.py',57),
  ('statement -> hash_elementos','statement',1,'p_hash','sintaxis.py',58),
  ('hash_vacio -> ID EQUALS LCURLYBRACKET RCURLYBRACKET','hash_vacio',4,'p_hash_vacio','sintaxis.py',63),
  ('hash_elementos -> ID EQUALS LCURLYBRACKET varios_pares_hash RCURLYBRACKET','hash_elementos',5,'p_hash_elementos','sintaxis.py',68),
  ('varios_pares_hash -> ID COLON valor','varios_pares_hash',3,'p_varios_pares_hash','sintaxis.py',73),
  ('varios_pares_hash -> STR HASHAS valor','varios_pares_hash',3,'p_varios_pares_hash','sintaxis.py',74),
  ('varios_pares_hash -> ID COLON valor COMMA varios_pares_hash','varios_pares_hash',5,'p_varios_pares_hash','sintaxis.py',75),
  ('varios_pares_hash -> STR HASHAS valor COMMA varios_pares_hash','varios_pares_hash',5,'p_varios_pares_hash','sintaxis.py',76),
  ('statement -> IF comparaciones statement END_LOWER','statement',4,'p_sentencia_if','sintaxis.py',85),
  ('statement -> LOOP DO statement BREAK IF comparacion','statement',6,'p_sentencia_loop','sintaxis.py',92),
  ('statement -> CASE valor when_clauses ELSE statement_list END_LOWER','statement',6,'p_case_when','sintaxis.py',98),
  ('statement -> CASE valor when_clauses ELSE PUTS valor END_LOWER','statement',7,'p_case_when','sintaxis.py',99),
  ('when_clauses -> when_clause','when_clauses',1,'p_when_clauses','sintaxis.py',104),
  ('when_clauses -> when_clauses when_clause','when_clauses',2,'p_when_clauses','sintaxis.py',105),
  ('when_clause -> WHEN valor THEN statement_list','when_clause',4,'p_when_clause','sintaxis.py',110),
  ('when_clause -> WHEN valor PUTS valor','when_clause',4,'p_when_clause','sintaxis.py',111),
  ('statement -> DEF ID LPARENTHESIS RPARENTHESIS statement END_LOWER','statement',6,'p_declaracion_basica','sintaxis.py',120),
  ('statement -> DEF ID LPARENTHESIS argumentos RPARENTHESIS statement END_LOWER','statement',7,'p_declaracion_parametros','sintaxis.py',125),
  ('statement -> DEF ID LPARENTHESIS argumentos RPARENTHESIS statement RETURN valor END_LOWER','statement',9,'p_declaracion_parametros_return','sintaxis.py',130),
  ('statement -> PUTS valor','statement',2,'p_print','sintaxis.py',135),
  ('varios_str -> STR','varios_str',1,'p_varios_str','sintaxis.py',143),
  ('varios_str -> STR COMMA STR','varios_str',3,'p_varios_str','sintaxis.py',144),
  ('statement -> ID EQUALS valor','statement',3,'p_sentencia_asignacion','sintaxis.py',154),
  ('valor -> numero','valor',1,'p_valor','sintaxis.py',159),
  ('valor -> STR','valor',1,'p_valor','sintaxis.py',160),
  ('valor -> ID','valor',1,'p_valor','sintaxis.py',161),
  ('argumentos -> ID','argumentos',1,'p_argumentos','sintaxis.py',169),
  ('argumentos -> ID COMMA argumentos','argumentos',3,'p_argumentos','sintaxis.py',170),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','sintaxis.py',175),
  ('statement_list -> statement','statement_list',1,'p_statement_list','sintaxis.py',176),
  ('comparador -> EQUAL','comparador',1,'p_comparador','sintaxis.py',181),
  ('comparador -> NOT_EQUAL','comparador',1,'p_comparador','sintaxis.py',182),
  ('comparador -> GREATER_THAN','comparador',1,'p_comparador','sintaxis.py',183),
  ('comparador -> LESS_THAN','comparador',1,'p_comparador','sintaxis.py',184),
  ('comparador -> GREATER_THAN_EQUAL','comparador',1,'p_comparador','sintaxis.py',185),
  ('comparador -> LESS_THAN_EQUAL','comparador',1,'p_comparador','sintaxis.py',186),
  ('comparacion_num -> numero comparador numero','comparacion_num',3,'p_comparacion_num','sintaxis.py',191),
  ('comparacion_variables -> ID EQUAL ID','comparacion_variables',3,'p_comparacion_variables','sintaxis.py',196),
  ('comparacion_variables -> ID NOT_EQUAL ID','comparacion_variables',3,'p_comparacion_variables','sintaxis.py',197),
  ('comparacion_variables -> boolean','comparacion_variables',1,'p_comparacion_variables','sintaxis.py',198),
  ('comparacion -> comparacion_num','comparacion',1,'p_comparacion','sintaxis.py',203),
  ('comparacion -> comparacion_variables','comparacion',1,'p_comparacion','sintaxis.py',204),
  ('comparaciones -> comparacion','comparaciones',1,'p_comparaciones','sintaxis.py',209),
  ('comparaciones -> comparacion conector comparacion','comparaciones',3,'p_comparaciones','sintaxis.py',210),
  ('conector -> OP_AND','conector',1,'p_conector','sintaxis.py',215),
  ('conector -> OP_OR','conector',1,'p_conector','sintaxis.py',216),
  ('numero -> INT','numero',1,'p_numero','sintaxis.py',221),
  ('numero -> FLOAT','numero',1,'p_numero','sintaxis.py',222),
  ('varios_numeros -> numero','varios_numeros',1,'p_varios_numeros','sintaxis.py',227),
  ('varios_numeros -> numero COMMA varios_numeros','varios_numeros',3,'p_varios_numeros','sintaxis.py',228),
  ('statement -> ID EQUALS expresion','statement',3,'p_asignacion_arimetica','sintaxis.py',234),
  ('operador_aritmetico -> PLUS','operador_aritmetico',1,'p_operador_aritmetico','sintaxis.py',240),
  ('operador_aritmetico -> MINUS','operador_aritmetico',1,'p_operador_aritmetico','sintaxis.py',241),
  ('operador_aritmetico -> MULTIPLY','operador_aritmetico',1,'p_operador_aritmetico','sintaxis.py',242),
  ('operador_aritmetico -> DIVIDE','operador_aritmetico',1,'p_operador_aritmetico','sintaxis.py',243),
  ('operador_aritmetico -> MODULO','operador_aritmetico',1,'p_operador_aritmetico','sintaxis.py',244),
  ('operador_aritmetico -> EXPONENT','operador_aritmetico',1,'p_operador_aritmetico','sintaxis.py',245),
  ('expresion -> numero operador_aritmetico numero','expresion',3,'p_expresion','sintaxis.py',250),
  ('expresion -> ID operador_aritmetico numero','expresion',3,'p_expresion','sintaxis.py',251),
  ('expresion -> ID operador_aritmetico ID','expresion',3,'p_expresion','sintaxis.py',252),
  ('expresion -> numero operador_aritmetico ID','expresion',3,'p_expresion','sintaxis.py',253),
  ('boolean -> TRUE','boolean',1,'p_booleans','sintaxis.py',258),
  ('boolean -> FALSE','boolean',1,'p_booleans','sintaxis.py',259),
]
