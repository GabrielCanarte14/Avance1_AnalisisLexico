
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALIAS AND ARRAY AT BEGIN BITWISE_AND BITWISE_NOT BITWISE_OR BITWISE_XOR BREAK CASE CLASS COLON COMMA COMPLEX CONSTANT DEDENT DEF DEFINED DIVIDE DO DOT EACH ELSE ELSEIF END_LOWER END_UPPER ENSURE EQUAL EQUALS EXPONENT FALSE FILE FLOAT FOR GLOBAL GREATER_THAN GREATER_THAN_EQUAL HASH HASHAS ID IF IN INDENT INT LBRACKET LCURLYBRACKET LESS_THAN LESS_THAN_EQUAL LINE LOOP LPARENTHESIS MINUS MODULE MODULO MULTIPLY NEXT NIL NOT NOT_EQUAL OP_AND OP_NOT OP_OR OR PLUS PUTS RATIONAL RBRACKET RCURLYBRACKET REDO RESCUE RETRY RETURN RPARENTHESIS SELF SEMICOLON SHIFT_LEFT SHIFT_RIGHT STR SUPER SYMBOL THEN TRUE UNDEF UNLESS UNTIL WHEN WHILE YIELD\n    inicio : set\n    | array\n    | statement_loop\n    | declaration\n    | hash\n    \n    varios_str : STR\n    | STR COMMA STR\n    \n    set : set_vacio\n    | set_numero\n    | set_str\n    \n    set_vacio : ID EQUALS LCURLYBRACKET RCURLYBRACKET\n    \n    set_numero : ID EQUALS LCURLYBRACKET varios_numeros RCURLYBRACKET\n    \n    set_str : ID EQUALS LCURLYBRACKET varios_str RCURLYBRACKET\n    \n    declaration : DEF ID LPARENTHESIS RPARENTHESIS bloque END_UPPER\n    \n    statement_loop : LOOP DO bloque BREAK IF comparacion \n    \n    array : array_vacio\n    | array_numero\n    | array_str\n    \n    array_vacio : ID EQUALS LBRACKET RBRACKET\n    \n    array_numero : ID EQUALS LBRACKET varios_numeros RBRACKET\n    \n    array_str : ID EQUALS LBRACKET varios_str RBRACKET\n    \n    statement : ID EQUALS valor\n    \n    valor : numero\n    | STR\n    | ID\n    \n    statement : IF comparaciones bloque END_LOWER\n    \n    bloque : INDENT statement DEDENT\n    \n    statement_list : statement_list statement\n    | statement\n    \n    comparador : EQUAL\n    | NOT_EQUAL\n    | GREATER_THAN\n    | LESS_THAN\n    | GREATER_THAN_EQUAL\n    | LESS_THAN_EQUAL\n    \n    comparacion_num : numero comparador numero\n    \n    comparacion_variables : ID EQUAL ID\n    | ID NOT_EQUAL ID\n    \n    comparacion : comparacion_num\n    | comparacion_variables\n    \n    comparaciones : comparacion\n    | comparacion conector comparacion\n    conector : OP_AND\n  | OP_OR\n  \n    numero : INT\n    | FLOAT\n    \n    varios_numeros : numero\n    | numero COMMA varios_numeros\n    \n    hash : hash_vacio\n    | hash_elementos\n    \n    hash_vacio : ID EQUALS LCURLYBRACKET RCURLYBRACKET\n    \n    hash_elementos : ID EQUALS LCURLYBRACKET varios_pares_hash RCURLYBRACKET\n    \n    varios_pares_hash : ID COLON valor\n    | STR HASHAS valor\n    | ID COLON valor COMMA varios_pares_hash\n    | STR HASHAS valor COMMA varios_pares_hash\n    '
    
_lr_action_items = {'LOOP':([0,],[13,]),'DEF':([0,],[14,]),'ID':([0,14,22,24,29,44,46,54,60,69,70,71,79,80,91,92,],[15,19,28,31,52,52,64,64,64,52,-43,-44,89,90,31,31,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,16,17,32,38,39,40,49,50,55,56,57,61,62,63,81,88,89,90,],[0,-1,-2,-3,-4,-5,-8,-9,-10,-16,-17,-18,-49,-50,-11,-45,-46,-19,-39,-40,-12,-13,-52,-20,-21,-15,-14,-36,-37,-38,]),'DO':([13,],[18,]),'EQUALS':([15,28,],[20,46,]),'INDENT':([18,30,38,39,47,48,49,50,87,88,89,90,],[22,22,-45,-46,22,-41,-39,-40,-42,-36,-37,-38,]),'LPARENTHESIS':([19,],[23,]),'LCURLYBRACKET':([20,],[24,]),'LBRACKET':([20,],[25,]),'BREAK':([21,45,],[26,-27,]),'IF':([22,26,],[29,44,]),'RPARENTHESIS':([23,],[30,]),'RCURLYBRACKET':([24,33,34,35,36,37,38,39,64,66,67,82,83,84,85,93,95,],[32,55,56,57,-47,-6,-45,-46,-25,-23,-24,-53,-48,-7,-54,-55,-56,]),'STR':([24,25,46,54,59,60,91,92,],[37,43,67,67,84,67,94,94,]),'INT':([24,25,29,44,46,54,58,60,69,70,71,72,73,74,75,76,77,78,],[38,38,38,38,38,38,38,38,38,-43,-44,38,-30,-31,-32,-33,-34,-35,]),'FLOAT':([24,25,29,44,46,54,58,60,69,70,71,72,73,74,75,76,77,78,],[39,39,39,39,39,39,39,39,39,-43,-44,39,-30,-31,-32,-33,-34,-35,]),'RBRACKET':([25,36,38,39,41,42,43,83,84,],[40,-47,-45,-46,61,62,-6,-48,-7,]),'DEDENT':([27,38,39,64,65,66,67,86,],[45,-45,-46,-25,-22,-23,-24,-26,]),'COLON':([31,],[54,]),'COMMA':([36,37,38,39,43,64,66,67,82,85,],[58,59,-45,-46,59,-25,-23,-24,91,92,]),'HASHAS':([37,94,],[60,60,]),'EQUAL':([38,39,51,52,],[-45,-46,73,79,]),'NOT_EQUAL':([38,39,51,52,],[-45,-46,74,80,]),'GREATER_THAN':([38,39,51,],[-45,-46,75,]),'LESS_THAN':([38,39,51,],[-45,-46,76,]),'GREATER_THAN_EQUAL':([38,39,51,],[-45,-46,77,]),'LESS_THAN_EQUAL':([38,39,51,],[-45,-46,78,]),'OP_AND':([38,39,48,49,50,88,89,90,],[-45,-46,70,-39,-40,-36,-37,-38,]),'OP_OR':([38,39,48,49,50,88,89,90,],[-45,-46,71,-39,-40,-36,-37,-38,]),'END_UPPER':([45,53,],[-27,81,]),'END_LOWER':([45,68,],[-27,86,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'set':([0,],[2,]),'array':([0,],[3,]),'statement_loop':([0,],[4,]),'declaration':([0,],[5,]),'hash':([0,],[6,]),'set_vacio':([0,],[7,]),'set_numero':([0,],[8,]),'set_str':([0,],[9,]),'array_vacio':([0,],[10,]),'array_numero':([0,],[11,]),'array_str':([0,],[12,]),'hash_vacio':([0,],[16,]),'hash_elementos':([0,],[17,]),'bloque':([18,30,47,],[21,53,68,]),'statement':([22,],[27,]),'varios_numeros':([24,25,58,],[33,41,83,]),'varios_str':([24,25,],[34,42,]),'varios_pares_hash':([24,91,92,],[35,93,95,]),'numero':([24,25,29,44,46,54,58,60,69,72,],[36,36,51,51,66,66,36,66,51,88,]),'comparaciones':([29,],[47,]),'comparacion':([29,44,69,],[48,63,87,]),'comparacion_num':([29,44,69,],[49,49,49,]),'comparacion_variables':([29,44,69,],[50,50,50,]),'valor':([46,54,60,],[65,82,85,]),'conector':([48,],[69,]),'comparador':([51,],[72,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> set','inicio',1,'p_inicio','sintaxis.py',6),
  ('inicio -> array','inicio',1,'p_inicio','sintaxis.py',7),
  ('inicio -> statement_loop','inicio',1,'p_inicio','sintaxis.py',8),
  ('inicio -> declaration','inicio',1,'p_inicio','sintaxis.py',9),
  ('inicio -> hash','inicio',1,'p_inicio','sintaxis.py',10),
  ('varios_str -> STR','varios_str',1,'p_varios_str','sintaxis.py',16),
  ('varios_str -> STR COMMA STR','varios_str',3,'p_varios_str','sintaxis.py',17),
  ('set -> set_vacio','set',1,'p_sets','sintaxis.py',22),
  ('set -> set_numero','set',1,'p_sets','sintaxis.py',23),
  ('set -> set_str','set',1,'p_sets','sintaxis.py',24),
  ('set_vacio -> ID EQUALS LCURLYBRACKET RCURLYBRACKET','set_vacio',4,'p_set_vacio','sintaxis.py',29),
  ('set_numero -> ID EQUALS LCURLYBRACKET varios_numeros RCURLYBRACKET','set_numero',5,'p_set_numeros','sintaxis.py',33),
  ('set_str -> ID EQUALS LCURLYBRACKET varios_str RCURLYBRACKET','set_str',5,'p_set_str','sintaxis.py',38),
  ('declaration -> DEF ID LPARENTHESIS RPARENTHESIS bloque END_UPPER','declaration',6,'p_declaracion_basica','sintaxis.py',43),
  ('statement_loop -> LOOP DO bloque BREAK IF comparacion','statement_loop',6,'p_sentencia_loop','sintaxis.py',48),
  ('array -> array_vacio','array',1,'p_array','sintaxis.py',54),
  ('array -> array_numero','array',1,'p_array','sintaxis.py',55),
  ('array -> array_str','array',1,'p_array','sintaxis.py',56),
  ('array_vacio -> ID EQUALS LBRACKET RBRACKET','array_vacio',4,'p_array_vacio','sintaxis.py',62),
  ('array_numero -> ID EQUALS LBRACKET varios_numeros RBRACKET','array_numero',5,'p_array_numeros','sintaxis.py',67),
  ('array_str -> ID EQUALS LBRACKET varios_str RBRACKET','array_str',5,'p_array_str','sintaxis.py',72),
  ('statement -> ID EQUALS valor','statement',3,'p_sentencia_asignacion','sintaxis.py',77),
  ('valor -> numero','valor',1,'p_valor','sintaxis.py',82),
  ('valor -> STR','valor',1,'p_valor','sintaxis.py',83),
  ('valor -> ID','valor',1,'p_valor','sintaxis.py',84),
  ('statement -> IF comparaciones bloque END_LOWER','statement',4,'p_sentencia_if','sintaxis.py',89),
  ('bloque -> INDENT statement DEDENT','bloque',3,'p_bloque','sintaxis.py',94),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','sintaxis.py',99),
  ('statement_list -> statement','statement_list',1,'p_statement_list','sintaxis.py',100),
  ('comparador -> EQUAL','comparador',1,'p_comparador','sintaxis.py',105),
  ('comparador -> NOT_EQUAL','comparador',1,'p_comparador','sintaxis.py',106),
  ('comparador -> GREATER_THAN','comparador',1,'p_comparador','sintaxis.py',107),
  ('comparador -> LESS_THAN','comparador',1,'p_comparador','sintaxis.py',108),
  ('comparador -> GREATER_THAN_EQUAL','comparador',1,'p_comparador','sintaxis.py',109),
  ('comparador -> LESS_THAN_EQUAL','comparador',1,'p_comparador','sintaxis.py',110),
  ('comparacion_num -> numero comparador numero','comparacion_num',3,'p_comparacion_num','sintaxis.py',115),
  ('comparacion_variables -> ID EQUAL ID','comparacion_variables',3,'p_comparacion_variables','sintaxis.py',120),
  ('comparacion_variables -> ID NOT_EQUAL ID','comparacion_variables',3,'p_comparacion_variables','sintaxis.py',121),
  ('comparacion -> comparacion_num','comparacion',1,'p_comparacion','sintaxis.py',126),
  ('comparacion -> comparacion_variables','comparacion',1,'p_comparacion','sintaxis.py',127),
  ('comparaciones -> comparacion','comparaciones',1,'p_comparaciones','sintaxis.py',132),
  ('comparaciones -> comparacion conector comparacion','comparaciones',3,'p_comparaciones','sintaxis.py',133),
  ('conector -> OP_AND','conector',1,'p_conector','sintaxis.py',138),
  ('conector -> OP_OR','conector',1,'p_conector','sintaxis.py',139),
  ('numero -> INT','numero',1,'p_numero','sintaxis.py',144),
  ('numero -> FLOAT','numero',1,'p_numero','sintaxis.py',145),
  ('varios_numeros -> numero','varios_numeros',1,'p_varios_numeros','sintaxis.py',150),
  ('varios_numeros -> numero COMMA varios_numeros','varios_numeros',3,'p_varios_numeros','sintaxis.py',151),
  ('hash -> hash_vacio','hash',1,'p_hash','sintaxis.py',156),
  ('hash -> hash_elementos','hash',1,'p_hash','sintaxis.py',157),
  ('hash_vacio -> ID EQUALS LCURLYBRACKET RCURLYBRACKET','hash_vacio',4,'p_hash_vacio','sintaxis.py',162),
  ('hash_elementos -> ID EQUALS LCURLYBRACKET varios_pares_hash RCURLYBRACKET','hash_elementos',5,'p_hash_elementos','sintaxis.py',167),
  ('varios_pares_hash -> ID COLON valor','varios_pares_hash',3,'p_varios_pares_hash','sintaxis.py',172),
  ('varios_pares_hash -> STR HASHAS valor','varios_pares_hash',3,'p_varios_pares_hash','sintaxis.py',173),
  ('varios_pares_hash -> ID COLON valor COMMA varios_pares_hash','varios_pares_hash',5,'p_varios_pares_hash','sintaxis.py',174),
  ('varios_pares_hash -> STR HASHAS valor COMMA varios_pares_hash','varios_pares_hash',5,'p_varios_pares_hash','sintaxis.py',175),
]
