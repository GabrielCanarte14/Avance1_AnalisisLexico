
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALIAS AND ARRAY AT BEGIN BITWISE_AND BITWISE_NOT BITWISE_OR BITWISE_XOR BREAK CASE CLASS COLON COMMA COMPLEX CONSTANT DEDENT DEF DEFINED DIVIDE DO DOT EACH ELSE ELSEIF END_LOWER END_UPPER ENSURE EQUAL EQUALS EXPONENT FALSE FILE FLOAT FOR GLOBAL GREATER_THAN GREATER_THAN_EQUAL HASH HASHAS ID IF IN INDENT INT LBRACKET LCURLYBRACKET LESS_THAN LESS_THAN_EQUAL LINE LOOP LPARENTHESIS MINUS MODULE MODULO MULTIPLY NEXT NIL NOT NOT_EQUAL OP_AND OP_NOT OP_OR OR PLUS PUTS RATIONAL RBRACKET RCURLYBRACKET REDO RESCUE RETRY RETURN RPARENTHESIS SELF SEMICOLON SHIFT_LEFT SHIFT_RIGHT STR SUPER SYMBOL THEN TRUE UNDEF UNLESS UNTIL WHEN WHILE YIELD\n    statement : set_vacio\n    | set_numero\n    | set_str\n    \n    statement : DEF ID LPARENTHESIS RPARENTHESIS statement END_UPPER\n    \n    statement : LOOP DO statement BREAK IF comparacion \n    \n    varios_str : STR\n    | STR COMMA STR\n    \n    set_vacio : ID EQUALS LCURLYBRACKET RCURLYBRACKET\n    \n    set_numero : ID EQUALS LCURLYBRACKET varios_numeros RCURLYBRACKET\n    \n    set_str : ID EQUALS LCURLYBRACKET varios_str RCURLYBRACKET\n    \n    statement : array_vacio\n    | array_numero\n    | array_str\n    \n    array_vacio : ID EQUALS LBRACKET RBRACKET\n    \n    array_numero : ID EQUALS LBRACKET varios_numeros RBRACKET\n    \n    array_str : ID EQUALS LBRACKET varios_str RBRACKET\n    \n    statement : ID EQUALS valor\n    \n    valor : numero\n    | STR\n    | ID\n    \n    statement : IF comparaciones statement END_LOWER\n    \n    statement : DEF ID LPARENTHESIS argumentos RPARENTHESIS statement END_LOWER\n    \n    argumentos : ID\n    | ID COMMA argumentos\n    \n    statement_list : statement_list statement\n    | statement\n    \n    comparador : EQUAL\n    | NOT_EQUAL\n    | GREATER_THAN\n    | LESS_THAN\n    | GREATER_THAN_EQUAL\n    | LESS_THAN_EQUAL\n    \n    comparacion_num : numero comparador numero\n    \n    comparacion_variables : ID EQUAL ID\n    | ID NOT_EQUAL ID\n    \n    comparacion : comparacion_num\n    | comparacion_variables\n    \n    comparaciones : comparacion\n    | comparacion conector comparacion\n    conector : OP_AND\n  | OP_OR\n  \n    numero : INT\n    | FLOAT\n    \n    varios_numeros : numero\n    | numero COMMA varios_numeros\n    \n    statement : hash_vacio\n    | hash_elementos\n    \n    hash_vacio : ID EQUALS LCURLYBRACKET RCURLYBRACKET\n    \n    hash_elementos : ID EQUALS LCURLYBRACKET varios_pares_hash RCURLYBRACKET\n    \n    varios_pares_hash : ID COLON valor\n    | STR HASHAS valor\n    | ID COLON valor COMMA varios_pares_hash\n    | STR HASHAS valor COMMA varios_pares_hash\n    '
    
_lr_action_items = {'DEF':([0,16,17,18,19,20,23,24,47,62,63,64,65,68,],[5,5,5,-38,-36,-37,-42,-43,5,-39,-33,-34,-35,5,]),'LOOP':([0,16,17,18,19,20,23,24,47,62,63,64,65,68,],[7,7,7,-38,-36,-37,-42,-43,7,-39,-33,-34,-35,7,]),'ID':([0,5,8,15,16,17,18,19,20,23,24,25,28,34,35,36,44,45,47,62,63,64,65,66,68,69,75,78,88,89,],[6,14,22,26,6,6,-38,-36,-37,-42,-43,46,49,22,-40,-41,64,65,6,-39,-33,-34,-35,46,6,26,26,22,49,49,]),'IF':([0,16,17,18,19,20,23,24,47,60,62,63,64,65,68,],[8,8,8,-38,-36,-37,-42,-43,8,78,-39,-33,-34,-35,8,]),'$end':([1,2,3,4,9,10,11,12,13,19,20,23,24,26,27,30,31,50,56,61,63,64,65,70,71,72,76,77,80,86,87,],[0,-1,-2,-3,-11,-12,-13,-46,-47,-36,-37,-42,-43,-20,-17,-18,-19,-8,-14,-21,-33,-34,-35,-9,-10,-49,-15,-16,-4,-5,-22,]),'BREAK':([2,3,4,9,10,11,12,13,19,20,23,24,26,27,30,31,32,50,56,61,63,64,65,70,71,72,76,77,80,86,87,],[-1,-2,-3,-11,-12,-13,-46,-47,-36,-37,-42,-43,-20,-17,-18,-19,60,-8,-14,-21,-33,-34,-35,-9,-10,-49,-15,-16,-4,-5,-22,]),'END_LOWER':([2,3,4,9,10,11,12,13,19,20,23,24,26,27,30,31,33,50,56,61,63,64,65,70,71,72,76,77,80,81,86,87,],[-1,-2,-3,-11,-12,-13,-46,-47,-36,-37,-42,-43,-20,-17,-18,-19,61,-8,-14,-21,-33,-34,-35,-9,-10,-49,-15,-16,-4,87,-5,-22,]),'END_UPPER':([2,3,4,9,10,11,12,13,19,20,23,24,26,27,30,31,50,56,61,63,64,65,67,70,71,72,76,77,80,86,87,],[-1,-2,-3,-11,-12,-13,-46,-47,-36,-37,-42,-43,-20,-17,-18,-19,-8,-14,-21,-33,-34,-35,80,-9,-10,-49,-15,-16,-4,-5,-22,]),'EQUALS':([6,],[15,]),'DO':([7,],[16,]),'INT':([8,15,28,29,34,35,36,37,38,39,40,41,42,43,69,73,75,78,],[23,23,23,23,23,-40,-41,23,-27,-28,-29,-30,-31,-32,23,23,23,23,]),'FLOAT':([8,15,28,29,34,35,36,37,38,39,40,41,42,43,69,73,75,78,],[24,24,24,24,24,-40,-41,24,-27,-28,-29,-30,-31,-32,24,24,24,24,]),'LPARENTHESIS':([14,],[25,]),'LCURLYBRACKET':([15,],[28,]),'LBRACKET':([15,],[29,]),'STR':([15,28,29,69,74,75,88,89,],[31,55,59,31,84,31,91,91,]),'OP_AND':([18,19,20,23,24,63,64,65,],[35,-36,-37,-42,-43,-33,-34,-35,]),'OP_OR':([18,19,20,23,24,63,64,65,],[36,-36,-37,-42,-43,-33,-34,-35,]),'EQUAL':([21,22,23,24,],[38,44,-42,-43,]),'NOT_EQUAL':([21,22,23,24,],[39,45,-42,-43,]),'GREATER_THAN':([21,23,24,],[40,-42,-43,]),'LESS_THAN':([21,23,24,],[41,-42,-43,]),'GREATER_THAN_EQUAL':([21,23,24,],[42,-42,-43,]),'LESS_THAN_EQUAL':([21,23,24,],[43,-42,-43,]),'COMMA':([23,24,26,30,31,46,54,55,59,82,85,],[-42,-43,-20,-18,-19,66,73,74,74,88,89,]),'RCURLYBRACKET':([23,24,26,28,30,31,51,52,53,54,55,82,83,84,85,90,92,],[-42,-43,-20,50,-18,-19,70,71,72,-44,-6,-50,-45,-7,-51,-52,-53,]),'RBRACKET':([23,24,29,54,57,58,59,83,84,],[-42,-43,56,-44,76,77,-6,-45,-7,]),'RPARENTHESIS':([25,46,48,79,],[47,-23,68,-24,]),'COLON':([49,],[69,]),'HASHAS':([55,91,],[75,75,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,16,17,47,68,],[1,32,33,67,81,]),'set_vacio':([0,16,17,47,68,],[2,2,2,2,2,]),'set_numero':([0,16,17,47,68,],[3,3,3,3,3,]),'set_str':([0,16,17,47,68,],[4,4,4,4,4,]),'array_vacio':([0,16,17,47,68,],[9,9,9,9,9,]),'array_numero':([0,16,17,47,68,],[10,10,10,10,10,]),'array_str':([0,16,17,47,68,],[11,11,11,11,11,]),'hash_vacio':([0,16,17,47,68,],[12,12,12,12,12,]),'hash_elementos':([0,16,17,47,68,],[13,13,13,13,13,]),'comparaciones':([8,],[17,]),'comparacion':([8,34,78,],[18,62,86,]),'comparacion_num':([8,34,78,],[19,19,19,]),'comparacion_variables':([8,34,78,],[20,20,20,]),'numero':([8,15,28,29,34,37,69,73,75,78,],[21,30,54,54,21,63,30,54,30,21,]),'valor':([15,69,75,],[27,82,85,]),'conector':([18,],[34,]),'comparador':([21,],[37,]),'argumentos':([25,66,],[48,79,]),'varios_numeros':([28,29,73,],[51,57,83,]),'varios_str':([28,29,],[52,58,]),'varios_pares_hash':([28,88,89,],[53,90,92,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> set_vacio','statement',1,'p_sets','sintaxis.py',6),
  ('statement -> set_numero','statement',1,'p_sets','sintaxis.py',7),
  ('statement -> set_str','statement',1,'p_sets','sintaxis.py',8),
  ('statement -> DEF ID LPARENTHESIS RPARENTHESIS statement END_UPPER','statement',6,'p_declaracion_basica','sintaxis.py',13),
  ('statement -> LOOP DO statement BREAK IF comparacion','statement',6,'p_sentencia_loop','sintaxis.py',18),
  ('varios_str -> STR','varios_str',1,'p_varios_str','sintaxis.py',25),
  ('varios_str -> STR COMMA STR','varios_str',3,'p_varios_str','sintaxis.py',26),
  ('set_vacio -> ID EQUALS LCURLYBRACKET RCURLYBRACKET','set_vacio',4,'p_set_vacio','sintaxis.py',31),
  ('set_numero -> ID EQUALS LCURLYBRACKET varios_numeros RCURLYBRACKET','set_numero',5,'p_set_numeros','sintaxis.py',35),
  ('set_str -> ID EQUALS LCURLYBRACKET varios_str RCURLYBRACKET','set_str',5,'p_set_str','sintaxis.py',40),
  ('statement -> array_vacio','statement',1,'p_array','sintaxis.py',47),
  ('statement -> array_numero','statement',1,'p_array','sintaxis.py',48),
  ('statement -> array_str','statement',1,'p_array','sintaxis.py',49),
  ('array_vacio -> ID EQUALS LBRACKET RBRACKET','array_vacio',4,'p_array_vacio','sintaxis.py',55),
  ('array_numero -> ID EQUALS LBRACKET varios_numeros RBRACKET','array_numero',5,'p_array_numeros','sintaxis.py',60),
  ('array_str -> ID EQUALS LBRACKET varios_str RBRACKET','array_str',5,'p_array_str','sintaxis.py',65),
  ('statement -> ID EQUALS valor','statement',3,'p_sentencia_asignacion','sintaxis.py',70),
  ('valor -> numero','valor',1,'p_valor','sintaxis.py',75),
  ('valor -> STR','valor',1,'p_valor','sintaxis.py',76),
  ('valor -> ID','valor',1,'p_valor','sintaxis.py',77),
  ('statement -> IF comparaciones statement END_LOWER','statement',4,'p_sentencia_if','sintaxis.py',82),
  ('statement -> DEF ID LPARENTHESIS argumentos RPARENTHESIS statement END_LOWER','statement',7,'p_declaracion_parametros','sintaxis.py',87),
  ('argumentos -> ID','argumentos',1,'p_argumentos','sintaxis.py',92),
  ('argumentos -> ID COMMA argumentos','argumentos',3,'p_argumentos','sintaxis.py',93),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','sintaxis.py',98),
  ('statement_list -> statement','statement_list',1,'p_statement_list','sintaxis.py',99),
  ('comparador -> EQUAL','comparador',1,'p_comparador','sintaxis.py',104),
  ('comparador -> NOT_EQUAL','comparador',1,'p_comparador','sintaxis.py',105),
  ('comparador -> GREATER_THAN','comparador',1,'p_comparador','sintaxis.py',106),
  ('comparador -> LESS_THAN','comparador',1,'p_comparador','sintaxis.py',107),
  ('comparador -> GREATER_THAN_EQUAL','comparador',1,'p_comparador','sintaxis.py',108),
  ('comparador -> LESS_THAN_EQUAL','comparador',1,'p_comparador','sintaxis.py',109),
  ('comparacion_num -> numero comparador numero','comparacion_num',3,'p_comparacion_num','sintaxis.py',114),
  ('comparacion_variables -> ID EQUAL ID','comparacion_variables',3,'p_comparacion_variables','sintaxis.py',119),
  ('comparacion_variables -> ID NOT_EQUAL ID','comparacion_variables',3,'p_comparacion_variables','sintaxis.py',120),
  ('comparacion -> comparacion_num','comparacion',1,'p_comparacion','sintaxis.py',125),
  ('comparacion -> comparacion_variables','comparacion',1,'p_comparacion','sintaxis.py',126),
  ('comparaciones -> comparacion','comparaciones',1,'p_comparaciones','sintaxis.py',131),
  ('comparaciones -> comparacion conector comparacion','comparaciones',3,'p_comparaciones','sintaxis.py',132),
  ('conector -> OP_AND','conector',1,'p_conector','sintaxis.py',137),
  ('conector -> OP_OR','conector',1,'p_conector','sintaxis.py',138),
  ('numero -> INT','numero',1,'p_numero','sintaxis.py',143),
  ('numero -> FLOAT','numero',1,'p_numero','sintaxis.py',144),
  ('varios_numeros -> numero','varios_numeros',1,'p_varios_numeros','sintaxis.py',149),
  ('varios_numeros -> numero COMMA varios_numeros','varios_numeros',3,'p_varios_numeros','sintaxis.py',150),
  ('statement -> hash_vacio','statement',1,'p_hash','sintaxis.py',155),
  ('statement -> hash_elementos','statement',1,'p_hash','sintaxis.py',156),
  ('hash_vacio -> ID EQUALS LCURLYBRACKET RCURLYBRACKET','hash_vacio',4,'p_hash_vacio','sintaxis.py',161),
  ('hash_elementos -> ID EQUALS LCURLYBRACKET varios_pares_hash RCURLYBRACKET','hash_elementos',5,'p_hash_elementos','sintaxis.py',166),
  ('varios_pares_hash -> ID COLON valor','varios_pares_hash',3,'p_varios_pares_hash','sintaxis.py',171),
  ('varios_pares_hash -> STR HASHAS valor','varios_pares_hash',3,'p_varios_pares_hash','sintaxis.py',172),
  ('varios_pares_hash -> ID COLON valor COMMA varios_pares_hash','varios_pares_hash',5,'p_varios_pares_hash','sintaxis.py',173),
  ('varios_pares_hash -> STR HASHAS valor COMMA varios_pares_hash','varios_pares_hash',5,'p_varios_pares_hash','sintaxis.py',174),
]
