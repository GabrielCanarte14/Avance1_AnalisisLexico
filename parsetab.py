
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALIAS AND ARRAY AT BEGIN BITWISE_AND BITWISE_NOT BITWISE_OR BITWISE_XOR BREAK CASE CLASS COLON COMMA COMPLEX CONSTANT DEF DEFINED DIVIDE DO DOT ELSE ELSEIF END_LOWER END_UPPER ENSURE EQUAL EQUALS EXPONENT FALSE FILE FLOAT FOR GLOBAL GREATER_THAN GREATER_THAN_EQUAL HASH HASHAS ID IF IN INT LBRACKET LCURLYBRACKET LESS_THAN LESS_THAN_EQUAL LINE LPARENTHESIS MINUS MODULE MODULO MULTIPLY NEXT NIL NOT NOT_EQUAL OP_AND OP_NOT OP_OR OR PLUS PUTS RATIONAL RBRACKET RCURLYBRACKET REDO RESCUE RETRY RETURN RPARENTHESIS SELF SEMICOLON SHIFT_LEFT SHIFT_RIGHT STR SUPER SYMBOL THEN TRUE UNDEF UNLESS UNTIL WHEN WHILE YIELD\n    array : ID EQUALS LBRACKET RBRACKET\n    \n    array : ID EQUALS LBRACKET varios_numeros RBRACKET\n    \n    array : ID EQUALS LBRACKET varios_str RBRACKET\n    \n    numero : INT\n    | FLOAT\n    \n    varios_numeros : numero\n    | numero COMMA varios_numeros\n    \n    varios_str : STR\n    | STR COMMA STR\n    '
    
_lr_action_items = {'ID':([0,],[2,]),'$end':([1,5,12,13,],[0,-1,-2,-3,]),'EQUALS':([2,],[3,]),'LBRACKET':([3,],[4,]),'RBRACKET':([4,6,7,8,9,10,11,16,17,],[5,12,13,-6,-8,-4,-5,-7,-9,]),'STR':([4,15,],[9,17,]),'INT':([4,14,],[10,10,]),'FLOAT':([4,14,],[11,11,]),'COMMA':([8,9,10,11,],[14,15,-4,-5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'array':([0,],[1,]),'varios_numeros':([4,14,],[6,16,]),'varios_str':([4,],[7,]),'numero':([4,14,],[8,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> array","S'",1,None,None,None),
  ('array -> ID EQUALS LBRACKET RBRACKET','array',4,'p_array_vacio','sintaxis.py',6),
  ('array -> ID EQUALS LBRACKET varios_numeros RBRACKET','array',5,'p_array_numeros','sintaxis.py',11),
  ('array -> ID EQUALS LBRACKET varios_str RBRACKET','array',5,'p_array_str','sintaxis.py',16),
  ('numero -> INT','numero',1,'p_numero','sintaxis.py',21),
  ('numero -> FLOAT','numero',1,'p_numero','sintaxis.py',22),
  ('varios_numeros -> numero','varios_numeros',1,'p_varios_numeros','sintaxis.py',27),
  ('varios_numeros -> numero COMMA varios_numeros','varios_numeros',3,'p_varios_numeros','sintaxis.py',28),
  ('varios_str -> STR','varios_str',1,'p_varios_str','sintaxis.py',33),
  ('varios_str -> STR COMMA STR','varios_str',3,'p_varios_str','sintaxis.py',34),
]
