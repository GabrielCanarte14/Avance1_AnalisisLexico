
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALIAS AND ARRAY AT BEGIN BITWISE_AND BITWISE_NOT BITWISE_OR BITWISE_XOR BREAK CASE CLASS COLON COMMA COMPLEX CONSTANT DEDENT DEF DEFINED DIVIDE DO DOT DOUBLYAT EACH ELSE ELSEIF END_LOWER END_UPPER ENSURE EQUAL EQUALS EXPONENT FALSE FILE FLOAT FOR GLOBAL GREATER_THAN GREATER_THAN_EQUAL HASH HASHAS HASHTAG ID IF IN INDENT INT LBRACKET LCURLYBRACKET LESS_THAN LESS_THAN_EQUAL LINE LOOP LPARENTHESIS MINUS MODULE MODULO MULTIPLY NEWLINE NEXT NIL NOT NOT_EQUAL OP_AND OP_NOT OP_OR OR PLUS PRINT PUTS RATIONAL RBRACKET RCURLYBRACKET REDO RESCUE RETRY RETURN RPARENTHESIS Rational SELF SEMICOLON SET SHIFT_LEFT SHIFT_RIGHT STR SUPER SYMBOL THEN TRUE UNDEF UNLESS UNTIL WHEN WHILE YIELDstatement : expressionexpression : variable_list EQUALS expression_listvariable_list : ID\n                     | variable_list COMMA IDexpression_list : expression\n                       | expression_list COMMA expressionexpression : ID EQUALS expressionexpression : AT ID EQUALS expressionexpression : GLOBAL ID EQUALS expressionexpression : ID EQUALS Rational LPARENTHESIS INT COMMA INT RPARENTHESIS\n    expression : expression PLUS expression\n    | expression MINUS expression\n    | expression MULTIPLY expression\n    | expression DIVIDE expression\n    \n    statement : set_vacio\n    | set_elementos\n    \n    set_vacio : ID EQUALS SET LCURLYBRACKET RCURLYBRACKET\n    \n    set_elementos : ID EQUALS SET LCURLYBRACKET varios_set_elementos RCURLYBRACKET\n    \n    varios_set_elementos : INT\n    | STR\n    | FLOAT\n    | INT COMMA varios_set_elementos\n    | FLOAT COMMA varios_set_elementos\n    | STR COMMA varios_set_elementos \n    \n    statement : array\n    \n    array : ID EQUALS LBRACKET RBRACKET\n    array : ID EQUALS LBRACKET string_lista RBRACKET\n    string_lista : STR\n    | STR COMMA string_lista\n    array : ID EQUALS LBRACKET int_lista RBRACKET\n    int_lista : INT\n    | INT COMMA int_lista\n    \n    statement : hash_vacio\n    | hash_elementos\n    \n    hash_vacio : ID EQUALS LCURLYBRACKET RCURLYBRACKET\n    \n    hash_elementos : ID EQUALS LCURLYBRACKET varios_pares_hash RCURLYBRACKET\n    \n    varios_pares_hash : ID COLON expression\n    | STR HASHAS expression\n    | ID COLON expression COMMA varios_pares_hash\n    | STR HASHAS expression COMMA varios_pares_hash\n    expression : INTexpression : FLOATexpression : STRexpression : TRUE\n                  | FALSEexpression : COLON IDexpression : ID\n    statement : PUTS STR\n    | PRINT STR\n    \n    statement : PUTS INT\n    | PRINT INT\n    \n    statement : PUTS FLOAT\n    | PRINT FLOAT\n    \n    statement : PUTS ID\n    | PRINT ID\n    statement : DEF ID LPARENTHESIS RPARENTHESIS LCURLYBRACKET statements RCURLYBRACKETstatement : DEF ID LPARENTHESIS parameters RPARENTHESIS LCURLYBRACKET statements RCURLYBRACKETparameters : ID\n                  | parameters COMMA IDstatements : statement\n                  | statements COMMA statementstatement : CASE expression case_when_list ELSE statement_list END_LOWER\n    case_when_list : case_when\n                   | case_when_list case_when\n    \n    case_when : WHEN expression THEN statement_list\n              | ELSE THEN statement_list\n    \n    statement_list : statement\n                   | statement_list statement\n    '
    
_lr_action_items = {'PUTS':([0,2,3,4,5,6,7,9,11,12,13,19,20,26,27,28,29,30,31,32,33,37,42,43,44,45,46,47,58,59,66,69,77,79,82,83,85,91,93,94,97,100,101,102,103,104,106,116,118,119,120,127,128,130,134,],[8,-1,-15,-16,-25,-33,-34,-43,-41,-42,-47,-44,-45,-48,-50,-52,-54,-49,-51,-53,-55,-47,-46,-11,-12,-13,-14,-7,-2,-5,-35,-26,8,8,-8,-9,-17,-36,-27,-30,8,8,-67,8,8,-6,-18,8,-62,-68,8,-56,8,-10,-57,]),'PRINT':([0,2,3,4,5,6,7,9,11,12,13,19,20,26,27,28,29,30,31,32,33,37,42,43,44,45,46,47,58,59,66,69,77,79,82,83,85,91,93,94,97,100,101,102,103,104,106,116,118,119,120,127,128,130,134,],[10,-1,-15,-16,-25,-33,-34,-43,-41,-42,-47,-44,-45,-48,-50,-52,-54,-49,-51,-53,-55,-47,-46,-11,-12,-13,-14,-7,-2,-5,-35,-26,10,10,-8,-9,-17,-36,-27,-30,10,10,-67,10,10,-6,-18,10,-62,-68,10,-56,10,-10,-57,]),'DEF':([0,2,3,4,5,6,7,9,11,12,13,19,20,26,27,28,29,30,31,32,33,37,42,43,44,45,46,47,58,59,66,69,77,79,82,83,85,91,93,94,97,100,101,102,103,104,106,116,118,119,120,127,128,130,134,],[14,-1,-15,-16,-25,-33,-34,-43,-41,-42,-47,-44,-45,-48,-50,-52,-54,-49,-51,-53,-55,-47,-46,-11,-12,-13,-14,-7,-2,-5,-35,-26,14,14,-8,-9,-17,-36,-27,-30,14,14,-67,14,14,-6,-18,14,-62,-68,14,-56,14,-10,-57,]),'CASE':([0,2,3,4,5,6,7,9,11,12,13,19,20,26,27,28,29,30,31,32,33,37,42,43,44,45,46,47,58,59,66,69,77,79,82,83,85,91,93,94,97,100,101,102,103,104,106,116,118,119,120,127,128,130,134,],[15,-1,-15,-16,-25,-33,-34,-43,-41,-42,-47,-44,-45,-48,-50,-52,-54,-49,-51,-53,-55,-47,-46,-11,-12,-13,-14,-7,-2,-5,-35,-26,15,15,-8,-9,-17,-36,-27,-30,15,15,-67,15,15,-6,-18,15,-62,-68,15,-56,15,-10,-57,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,38,39,42,43,44,45,46,47,50,52,56,57,58,59,61,62,66,69,77,79,81,82,83,85,90,91,92,93,94,97,99,100,101,102,103,104,106,116,118,119,120,125,126,127,128,130,134,],[13,-1,-15,-16,-25,-33,-34,29,-43,33,-41,-42,-47,35,37,40,41,-44,-45,42,37,37,37,37,-48,-50,-52,-54,-49,-51,-53,-55,37,-47,37,60,-46,-11,-12,-13,-14,-7,65,74,37,37,-2,-5,37,37,-35,-26,13,13,37,-8,-9,-17,37,-36,37,-27,-30,13,117,13,-67,13,13,-6,-18,13,-62,-68,13,65,65,-56,13,-10,-57,]),'AT':([0,2,3,4,5,6,7,9,11,12,13,15,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,37,38,42,43,44,45,46,47,56,57,58,59,61,62,66,69,77,79,81,82,83,85,90,91,92,93,94,97,100,101,102,103,104,106,116,118,119,120,127,128,130,134,],[17,-1,-15,-16,-25,-33,-34,-43,-41,-42,-47,17,-44,-45,17,17,17,17,-48,-50,-52,-54,-49,-51,-53,-55,17,-47,17,-46,-11,-12,-13,-14,-7,17,17,-2,-5,17,17,-35,-26,17,17,17,-8,-9,-17,17,-36,17,-27,-30,17,17,-67,17,17,-6,-18,17,-62,-68,17,-56,17,-10,-57,]),'GLOBAL':([0,2,3,4,5,6,7,9,11,12,13,15,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,37,38,42,43,44,45,46,47,56,57,58,59,61,62,66,69,77,79,81,82,83,85,90,91,92,93,94,97,100,101,102,103,104,106,116,118,119,120,127,128,130,134,],[18,-1,-15,-16,-25,-33,-34,-43,-41,-42,-47,18,-44,-45,18,18,18,18,-48,-50,-52,-54,-49,-51,-53,-55,18,-47,18,-46,-11,-12,-13,-14,-7,18,18,-2,-5,18,18,-35,-26,18,18,18,-8,-9,-17,18,-36,18,-27,-30,18,18,-67,18,18,-6,-18,18,-62,-68,18,-56,18,-10,-57,]),'INT':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,37,38,42,43,44,45,46,47,51,56,57,58,59,61,62,63,64,66,69,77,79,81,82,83,85,90,91,92,93,94,96,97,100,101,102,103,104,105,106,107,108,109,116,118,119,120,127,128,130,134,],[11,-1,-15,-16,-25,-33,-34,27,-43,31,-41,-42,-47,11,-44,-45,11,11,11,11,-48,-50,-52,-54,-49,-51,-53,-55,11,-47,11,-46,-11,-12,-13,-14,-7,73,11,11,-2,-5,11,11,84,87,-35,-26,11,11,11,-8,-9,-17,11,-36,11,-27,-30,73,11,11,-67,11,11,-6,121,-18,87,87,87,11,-62,-68,11,-56,11,-10,-57,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,37,38,42,43,44,45,46,47,56,57,58,59,61,62,64,66,69,77,79,81,82,83,85,90,91,92,93,94,97,100,101,102,103,104,106,107,108,109,116,118,119,120,127,128,130,134,],[12,-1,-15,-16,-25,-33,-34,28,-43,32,-41,-42,-47,12,-44,-45,12,12,12,12,-48,-50,-52,-54,-49,-51,-53,-55,12,-47,12,-46,-11,-12,-13,-14,-7,12,12,-2,-5,12,12,89,-35,-26,12,12,12,-8,-9,-17,12,-36,12,-27,-30,12,12,-67,12,12,-6,-18,89,89,89,12,-62,-68,12,-56,12,-10,-57,]),'STR':([0,2,3,4,5,6,7,8,9,10,11,12,13,15,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,37,38,42,43,44,45,46,47,50,51,56,57,58,59,61,62,64,66,69,77,79,81,82,83,85,90,91,92,93,94,95,97,100,101,102,103,104,106,107,108,109,116,118,119,120,125,126,127,128,130,134,],[9,-1,-15,-16,-25,-33,-34,26,-43,30,-41,-42,-47,9,-44,-45,9,9,9,9,-48,-50,-52,-54,-49,-51,-53,-55,9,-47,9,-46,-11,-12,-13,-14,-7,68,72,9,9,-2,-5,9,9,88,-35,-26,9,9,9,-8,-9,-17,9,-36,9,-27,-30,72,9,9,-67,9,9,-6,-18,88,88,88,9,-62,-68,9,68,68,-56,9,-10,-57,]),'TRUE':([0,2,3,4,5,6,7,9,11,12,13,15,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,37,38,42,43,44,45,46,47,56,57,58,59,61,62,66,69,77,79,81,82,83,85,90,91,92,93,94,97,100,101,102,103,104,106,116,118,119,120,127,128,130,134,],[19,-1,-15,-16,-25,-33,-34,-43,-41,-42,-47,19,-44,-45,19,19,19,19,-48,-50,-52,-54,-49,-51,-53,-55,19,-47,19,-46,-11,-12,-13,-14,-7,19,19,-2,-5,19,19,-35,-26,19,19,19,-8,-9,-17,19,-36,19,-27,-30,19,19,-67,19,19,-6,-18,19,-62,-68,19,-56,19,-10,-57,]),'FALSE':([0,2,3,4,5,6,7,9,11,12,13,15,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,37,38,42,43,44,45,46,47,56,57,58,59,61,62,66,69,77,79,81,82,83,85,90,91,92,93,94,97,100,101,102,103,104,106,116,118,119,120,127,128,130,134,],[20,-1,-15,-16,-25,-33,-34,-43,-41,-42,-47,20,-44,-45,20,20,20,20,-48,-50,-52,-54,-49,-51,-53,-55,20,-47,20,-46,-11,-12,-13,-14,-7,20,20,-2,-5,20,20,-35,-26,20,20,20,-8,-9,-17,20,-36,20,-27,-30,20,20,-67,20,20,-6,-18,20,-62,-68,20,-56,20,-10,-57,]),'COLON':([0,2,3,4,5,6,7,9,11,12,13,15,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,37,38,42,43,44,45,46,47,56,57,58,59,61,62,65,66,69,77,79,81,82,83,85,90,91,92,93,94,97,100,101,102,103,104,106,116,118,119,120,127,128,130,134,],[21,-1,-15,-16,-25,-33,-34,-43,-41,-42,-47,21,-44,-45,21,21,21,21,-48,-50,-52,-54,-49,-51,-53,-55,21,-47,21,-46,-11,-12,-13,-14,-7,21,21,-2,-5,21,21,90,-35,-26,21,21,21,-8,-9,-17,21,-36,21,-27,-30,21,21,-67,21,21,-6,-18,21,-62,-68,21,-56,21,-10,-57,]),'$end':([1,2,3,4,5,6,7,9,11,12,13,19,20,26,27,28,29,30,31,32,33,37,42,43,44,45,46,47,58,59,66,69,82,83,85,91,93,94,104,106,118,127,130,134,],[0,-1,-15,-16,-25,-33,-34,-43,-41,-42,-47,-44,-45,-48,-50,-52,-54,-49,-51,-53,-55,-47,-46,-11,-12,-13,-14,-7,-2,-5,-35,-26,-8,-9,-17,-36,-27,-30,-6,-18,-62,-56,-10,-57,]),'END_LOWER':([2,3,4,5,6,7,9,11,12,13,19,20,26,27,28,29,30,31,32,33,37,42,43,44,45,46,47,58,59,66,69,82,83,85,91,93,94,100,101,104,106,118,119,127,130,134,],[-1,-15,-16,-25,-33,-34,-43,-41,-42,-47,-44,-45,-48,-50,-52,-54,-49,-51,-53,-55,-47,-46,-11,-12,-13,-14,-7,-2,-5,-35,-26,-8,-9,-17,-36,-27,-30,118,-67,-6,-18,-62,-68,-56,-10,-57,]),'ELSE':([2,3,4,5,6,7,9,11,12,13,19,20,26,27,28,29,30,31,32,33,36,37,42,43,44,45,46,47,53,55,58,59,66,69,78,82,83,85,91,93,94,101,102,104,106,118,119,120,127,130,134,],[-1,-15,-16,-25,-33,-34,-43,-41,-42,-47,-44,-45,-48,-50,-52,-54,-49,-51,-53,-55,54,-47,-46,-11,-12,-13,-14,-7,77,-63,-2,-5,-35,-26,-64,-8,-9,-17,-36,-27,-30,-67,-66,-6,-18,-62,-68,-65,-56,-10,-57,]),'WHEN':([2,3,4,5,6,7,9,11,12,13,19,20,26,27,28,29,30,31,32,33,36,37,42,43,44,45,46,47,53,55,58,59,66,69,78,82,83,85,91,93,94,101,102,104,106,118,119,120,127,130,134,],[-1,-15,-16,-25,-33,-34,-43,-41,-42,-47,-44,-45,-48,-50,-52,-54,-49,-51,-53,-55,56,-47,-46,-11,-12,-13,-14,-7,56,-63,-2,-5,-35,-26,-64,-8,-9,-17,-36,-27,-30,-67,-66,-6,-18,-62,-68,-65,-56,-10,-57,]),'RCURLYBRACKET':([2,3,4,5,6,7,9,11,12,13,19,20,26,27,28,29,30,31,32,33,37,42,43,44,45,46,47,50,58,59,64,66,67,69,82,83,85,86,87,88,89,91,93,94,104,106,110,111,114,115,118,122,123,124,127,129,130,131,132,133,134,],[-1,-15,-16,-25,-33,-34,-43,-41,-42,-47,-44,-45,-48,-50,-52,-54,-49,-51,-53,-55,-47,-46,-11,-12,-13,-14,-7,66,-2,-5,85,-35,91,-26,-8,-9,-17,106,-19,-20,-21,-36,-27,-30,-6,-18,-37,-38,127,-60,-62,-22,-24,-23,-56,134,-10,-39,-40,-61,-57,]),'COMMA':([2,3,4,5,6,7,9,11,12,13,16,19,20,26,27,28,29,30,31,32,33,37,42,43,44,45,46,47,58,59,60,66,69,72,73,74,76,82,83,84,85,87,88,89,91,93,94,104,106,110,111,114,115,117,118,127,129,130,133,134,],[-1,-15,-16,-25,-33,-34,-43,-41,-42,-3,39,-44,-45,-48,-50,-52,-54,-49,-51,-53,-55,-3,-46,-11,-12,-13,-14,-7,81,-5,-4,-35,-26,95,96,-58,99,-8,-9,105,-17,107,108,109,-36,-27,-30,-6,-18,125,126,128,-60,-59,-62,-56,128,-10,-61,-57,]),'PLUS':([2,9,11,12,13,19,20,36,37,42,43,44,45,46,47,58,59,80,82,83,104,110,111,130,],[22,-43,-41,-42,-47,-44,-45,22,-47,-46,22,22,22,22,22,-2,22,22,22,22,22,22,22,-10,]),'MINUS':([2,9,11,12,13,19,20,36,37,42,43,44,45,46,47,58,59,80,82,83,104,110,111,130,],[23,-43,-41,-42,-47,-44,-45,23,-47,-46,23,23,23,23,23,-2,23,23,23,23,23,23,23,-10,]),'MULTIPLY':([2,9,11,12,13,19,20,36,37,42,43,44,45,46,47,58,59,80,82,83,104,110,111,130,],[24,-43,-41,-42,-47,-44,-45,24,-47,-46,24,24,24,24,24,-2,24,24,24,24,24,24,24,-10,]),'DIVIDE':([2,9,11,12,13,19,20,36,37,42,43,44,45,46,47,58,59,80,82,83,104,110,111,130,],[25,-43,-41,-42,-47,-44,-45,25,-47,-46,25,25,25,25,25,-2,25,25,25,25,25,25,25,-10,]),'THEN':([9,11,12,19,20,37,42,43,44,45,46,47,54,58,59,77,80,82,83,104,130,],[-43,-41,-42,-44,-45,-47,-46,-11,-12,-13,-14,-7,79,-2,-5,79,103,-8,-9,-6,-10,]),'EQUALS':([13,16,37,40,41,60,],[34,38,57,61,62,-4,]),'Rational':([34,57,],[48,48,]),'SET':([34,],[49,]),'LBRACKET':([34,],[51,]),'LCURLYBRACKET':([34,49,75,98,],[50,64,97,116,]),'LPARENTHESIS':([35,48,],[52,63,]),'RBRACKET':([51,70,71,72,73,112,113,],[69,93,94,-28,-31,-29,-32,]),'RPARENTHESIS':([52,74,76,117,121,],[75,-58,98,-59,130,]),'HASHAS':([68,],[92,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,77,79,97,100,102,103,116,120,128,],[1,101,101,115,119,119,101,115,119,133,]),'expression':([0,15,22,23,24,25,34,38,56,57,61,62,77,79,81,90,92,97,100,102,103,116,120,128,],[2,36,43,44,45,46,47,59,80,47,82,83,2,2,104,110,111,2,2,2,2,2,2,2,]),'set_vacio':([0,77,79,97,100,102,103,116,120,128,],[3,3,3,3,3,3,3,3,3,3,]),'set_elementos':([0,77,79,97,100,102,103,116,120,128,],[4,4,4,4,4,4,4,4,4,4,]),'array':([0,77,79,97,100,102,103,116,120,128,],[5,5,5,5,5,5,5,5,5,5,]),'hash_vacio':([0,77,79,97,100,102,103,116,120,128,],[6,6,6,6,6,6,6,6,6,6,]),'hash_elementos':([0,77,79,97,100,102,103,116,120,128,],[7,7,7,7,7,7,7,7,7,7,]),'variable_list':([0,15,22,23,24,25,34,38,56,57,61,62,77,79,81,90,92,97,100,102,103,116,120,128,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'case_when_list':([36,],[53,]),'case_when':([36,53,],[55,78,]),'expression_list':([38,],[58,]),'varios_pares_hash':([50,125,126,],[67,131,132,]),'string_lista':([51,95,],[70,112,]),'int_lista':([51,96,],[71,113,]),'parameters':([52,],[76,]),'varios_set_elementos':([64,107,108,109,],[86,122,123,124,]),'statement_list':([77,79,103,],[100,102,120,]),'statements':([97,116,],[114,129,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement_expression','analizer_ruby.py',12),
  ('expression -> variable_list EQUALS expression_list','expression',3,'p_statement_multiple_assignment','analizer_ruby.py',18),
  ('variable_list -> ID','variable_list',1,'p_variable_list','analizer_ruby.py',30),
  ('variable_list -> variable_list COMMA ID','variable_list',3,'p_variable_list','analizer_ruby.py',31),
  ('expression_list -> expression','expression_list',1,'p_expression_list','analizer_ruby.py',39),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','analizer_ruby.py',40),
  ('expression -> ID EQUALS expression','expression',3,'p_expression_assignment','analizer_ruby.py',50),
  ('expression -> AT ID EQUALS expression','expression',4,'p_expression_assignment_instance','analizer_ruby.py',67),
  ('expression -> GLOBAL ID EQUALS expression','expression',4,'p_expression_assignment_global','analizer_ruby.py',76),
  ('expression -> ID EQUALS Rational LPARENTHESIS INT COMMA INT RPARENTHESIS','expression',8,'p_expression_assignment_rational','analizer_ruby.py',85),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binary_operation','analizer_ruby.py',95),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binary_operation','analizer_ruby.py',96),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binary_operation','analizer_ruby.py',97),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binary_operation','analizer_ruby.py',98),
  ('statement -> set_vacio','statement',1,'p_set','analizer_ruby.py',120),
  ('statement -> set_elementos','statement',1,'p_set','analizer_ruby.py',121),
  ('set_vacio -> ID EQUALS SET LCURLYBRACKET RCURLYBRACKET','set_vacio',5,'p_set_vacio','analizer_ruby.py',126),
  ('set_elementos -> ID EQUALS SET LCURLYBRACKET varios_set_elementos RCURLYBRACKET','set_elementos',6,'p_set_elementos','analizer_ruby.py',136),
  ('varios_set_elementos -> INT','varios_set_elementos',1,'p_varios_set_elementos','analizer_ruby.py',147),
  ('varios_set_elementos -> STR','varios_set_elementos',1,'p_varios_set_elementos','analizer_ruby.py',148),
  ('varios_set_elementos -> FLOAT','varios_set_elementos',1,'p_varios_set_elementos','analizer_ruby.py',149),
  ('varios_set_elementos -> INT COMMA varios_set_elementos','varios_set_elementos',3,'p_varios_set_elementos','analizer_ruby.py',150),
  ('varios_set_elementos -> FLOAT COMMA varios_set_elementos','varios_set_elementos',3,'p_varios_set_elementos','analizer_ruby.py',151),
  ('varios_set_elementos -> STR COMMA varios_set_elementos','varios_set_elementos',3,'p_varios_set_elementos','analizer_ruby.py',152),
  ('statement -> array','statement',1,'p_array','analizer_ruby.py',162),
  ('array -> ID EQUALS LBRACKET RBRACKET','array',4,'p_array_vacio','analizer_ruby.py',168),
  ('array -> ID EQUALS LBRACKET string_lista RBRACKET','array',5,'p_string_array','analizer_ruby.py',178),
  ('string_lista -> STR','string_lista',1,'p_string_lista','analizer_ruby.py',189),
  ('string_lista -> STR COMMA string_lista','string_lista',3,'p_string_lista','analizer_ruby.py',190),
  ('array -> ID EQUALS LBRACKET int_lista RBRACKET','array',5,'p_int_array','analizer_ruby.py',200),
  ('int_lista -> INT','int_lista',1,'p_int_lista','analizer_ruby.py',211),
  ('int_lista -> INT COMMA int_lista','int_lista',3,'p_int_lista','analizer_ruby.py',212),
  ('statement -> hash_vacio','statement',1,'p_hash','analizer_ruby.py',223),
  ('statement -> hash_elementos','statement',1,'p_hash','analizer_ruby.py',224),
  ('hash_vacio -> ID EQUALS LCURLYBRACKET RCURLYBRACKET','hash_vacio',4,'p_hash_vacio','analizer_ruby.py',230),
  ('hash_elementos -> ID EQUALS LCURLYBRACKET varios_pares_hash RCURLYBRACKET','hash_elementos',5,'p_hash_elementos','analizer_ruby.py',243),
  ('varios_pares_hash -> ID COLON expression','varios_pares_hash',3,'p_varios_pares_hash','analizer_ruby.py',257),
  ('varios_pares_hash -> STR HASHAS expression','varios_pares_hash',3,'p_varios_pares_hash','analizer_ruby.py',258),
  ('varios_pares_hash -> ID COLON expression COMMA varios_pares_hash','varios_pares_hash',5,'p_varios_pares_hash','analizer_ruby.py',259),
  ('varios_pares_hash -> STR HASHAS expression COMMA varios_pares_hash','varios_pares_hash',5,'p_varios_pares_hash','analizer_ruby.py',260),
  ('expression -> INT','expression',1,'p_expression_int','analizer_ruby.py',275),
  ('expression -> FLOAT','expression',1,'p_expression_float','analizer_ruby.py',280),
  ('expression -> STR','expression',1,'p_expression_string','analizer_ruby.py',284),
  ('expression -> TRUE','expression',1,'p_expression_boolean','analizer_ruby.py',288),
  ('expression -> FALSE','expression',1,'p_expression_boolean','analizer_ruby.py',289),
  ('expression -> COLON ID','expression',2,'p_expression_symbol','analizer_ruby.py',295),
  ('expression -> ID','expression',1,'p_expression_id','analizer_ruby.py',302),
  ('statement -> PUTS STR','statement',2,'p_print_str','analizer_ruby.py',313),
  ('statement -> PRINT STR','statement',2,'p_print_str','analizer_ruby.py',314),
  ('statement -> PUTS INT','statement',2,'p_print_int','analizer_ruby.py',322),
  ('statement -> PRINT INT','statement',2,'p_print_int','analizer_ruby.py',323),
  ('statement -> PUTS FLOAT','statement',2,'p_print_float','analizer_ruby.py',329),
  ('statement -> PRINT FLOAT','statement',2,'p_print_float','analizer_ruby.py',330),
  ('statement -> PUTS ID','statement',2,'p_print_id','analizer_ruby.py',336),
  ('statement -> PRINT ID','statement',2,'p_print_id','analizer_ruby.py',337),
  ('statement -> DEF ID LPARENTHESIS RPARENTHESIS LCURLYBRACKET statements RCURLYBRACKET','statement',7,'p_function_basic','analizer_ruby.py',350),
  ('statement -> DEF ID LPARENTHESIS parameters RPARENTHESIS LCURLYBRACKET statements RCURLYBRACKET','statement',8,'p_function_statements','analizer_ruby.py',360),
  ('parameters -> ID','parameters',1,'p_parameters','analizer_ruby.py',371),
  ('parameters -> parameters COMMA ID','parameters',3,'p_parameters','analizer_ruby.py',372),
  ('statements -> statement','statements',1,'p_statements','analizer_ruby.py',380),
  ('statements -> statements COMMA statement','statements',3,'p_statements','analizer_ruby.py',381),
  ('statement -> CASE expression case_when_list ELSE statement_list END_LOWER','statement',6,'p_statement_case','analizer_ruby.py',389),
  ('case_when_list -> case_when','case_when_list',1,'p_case_when_list','analizer_ruby.py',412),
  ('case_when_list -> case_when_list case_when','case_when_list',2,'p_case_when_list','analizer_ruby.py',413),
  ('case_when -> WHEN expression THEN statement_list','case_when',4,'p_case_when','analizer_ruby.py',423),
  ('case_when -> ELSE THEN statement_list','case_when',3,'p_case_when','analizer_ruby.py',424),
  ('statement_list -> statement','statement_list',1,'p_statement_list','analizer_ruby.py',433),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','analizer_ruby.py',434),
]
